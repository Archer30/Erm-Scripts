ZVSE2
; Author:   Archer30
; Special thanks to wessonsm
; Engine:   ERM 2.0+
; Requires: ERA 3.3+, Era Erm Framework, 77 wog - map rules

; Summon random enemy stacks every X round for battles between human and AI


!?FU(OnBattleRound)&i^battle_round^>=0/i^battle_hasHuman^/i^battle_humanOnly^<>(TRUE);
; ========================== TESTING ==========================
!!FU(tus_SummonAdditionalEnemies):P-1/-1/(MON_MARKSMAN)/30/3;
!!FU(tus_SummonAdditionalEnemies):P5/(HERO_ORRIN)/(MON_MARKSMAN)/30/3;
!!FU(tus_SummonAdditionalEnemies):P9/(HERO_ORRIN)/(MON_MARKSMAN)/60/3;
!!FU(tus_SummonAdditionalEnemies):P12/(HERO_ORRIN)/(MON_MARKSMAN)/90/3;
; ======================== END TESTING ========================

!?FU(tus_SummonAdditionalEnemies);
!#VA(round:x);                          [round of summoning. -1 for every round]
!#VA(hero:x);                           [hero who can summon. -1 for any hero/no hero]
!#VA(type:x);                           [Type of summoning monster]
!#VA(num:x);                            [number of monster]
!#VA(maxColumn:x);                      [Max coloumn allowed for summoning from the first column of each side]

; Exit if not targeted hero
!!FU&i^battle_round^<>(round)/(round)<>-1:E;
!!FU&i^battle_hero_0^<>(hero)/i^battle_hero_1^<>(hero)/(hero)<>-1:E;

; Exit if the target hero is not controled by AI
!!VR(side:y):S-1;

!!if&i^battle_ai_0^;
  !!VR(side)|i^battle_hero_0^=(hero)/(hero)=-1:S(BATTLE_LEFT);
!!el&i^battle_ai_1^;
  !!VR(side)|i^battle_hero_1^=(hero)/(hero)=-1:S(BATTLE_RIGHT);
!!en;

!!FU&(side)=-1:E;

; Check if it is eligible to summon (if the stack count is fewer than 20)
!!FU(tus_CheckIfEligibleToSummon):P(side)/?(isEligible:y);

!!if&(isEligible);
  !!MA:X(type)/?(flags:y);
  !!VR(isDoubleWide:y):S(flags) &(MON_FLAG_WIDE);

  !!FU(tus_GetRandomPositionForSummon):P(side)/(isDoubleWide)/?(randPos:y)/(maxColumn);

  !!if&(randPos)>-1;
    ; Summon the stack and play sound
    !!SN:P^SUMNELM^;
    !!BU:S(type)/(num)/(randPos)/(side)/-1/(TRUE);
    ; Add in the flag of summoning creature so the stack ID would be released after killed
    !!BU:E(randPos)/?(stack:y);
    !!BM(stack):Fd|(MON_FLAG_SUMMONED);
  !!en;
!!en;

!?FU(tus_CheckIfEligibleToSummon);
!#VA(side:x) (isEligible:x);

!!VR(isEligible):S(FALSE);

!!UN:C6919200/4/?(value:y);
!!VR(address:y):S(side) *4 +21692 +(value);
!!UN:C(address)/4/?(stackNum:y);

!!VR(isEligible)&(stackNum)<20:S(TRUE);

!?FU(tus_GetRandomPositionForSummon);
!#VA(side:x) (isDoubleWide:x) (randPos:x) (maxColumn:x);

!!VR(randPos):S-1;
!!FU(NewIntArray):P?(validPosArray:y);

!!re (pos:y)/1/185;
  !!VR(isAvailPos:y):S(TRUE);
    !!FU(tus_CheckIfHexIsFree):P(side)/(pos)/(maxColumn)/?(isAvailPos);
  
  !!if&(isDoubleWide)/(isAvailPos);
    !!VR(secPos:y)&(side)=(BATTLE_LEFT):S(pos) +1;
    !!VR(secPos)&(side)=(BATTLE_RIGHT):S(pos) -1;
    !!FU(tus_CheckIfHexIsFree):P(side)/(secPos)/(maxColumn)/?(isAvailPos);
  !!en;
  
  !!FU(Array_Push)&(isAvailPos):P(validPosArray)/(pos);
!!en;

!!SN:M(validPosArray)/?(arraySize:y);

!!if&(arraySize)>=1;
  !!VR(lastIndex:y):S(arraySize)-1;
  !!VR(randPosPtr:y):R0/0/(lastIndex);
  !!SN:M(validPosArray)/(randPosPtr)/?(randPos);
!!en;

!?FU(tus_CheckIfHexIsFree);
!#VA(side:x) (pos:x) (maxColumn:x) (isAvailPos:x);

!!VR(isAvailPos):S(TRUE);

!!VR(realColumn:y):S(pos) %17;

!!if&(side)=(BATTLE_LEFT);
  !!VR(column:y):S(realColumn);
!!el;
  !!VR(column):S16 -(realColumn);
!!en;

!!if&(column)>0/(column)<=(maxColumn);
  !!BU:E(pos)/?(stack:y) O(pos)/?(obstacleFlag:y);
  !!VR(isAvailPos)|(stack)>(NO_STACK)/(obstacleFlag)>0:S(FALSE);
!!el;
  !!VR(isAvailPos):S(FALSE);
!!en;
