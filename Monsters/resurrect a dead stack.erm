ZVSE2
; Author:   igrik
; Engine:   ERM 2.0+
; Requires: ERA 3.3+, Era Erm Framework

; Resurrect a completely dead stack from the battlefield


!?FU(res_ResurrectedDeadStack);
!#VA(stackID:x) (resurrectedHP:x);

!!BM(stackID):Z?(stack:y) F?(flags:y) H?(maxHP:y);
!!FU&(stack)=(NULL):E;
!!VR(isDie:y):S(flags) &(MON_FLAG_DIED);
!!FU&(isDie)=(FALSE):E;
!!VR(side:y):S(stackID) :(BATTLE_STACKS_PER_SIDE);
!!VR(index:y):S(stackID) %(BATTLE_STACKS_PER_SIDE);
!!VR(count:y):S(resurrectedHP) :(maxHP);
!!FU&(count)<1:E;
!!BM(stackID):B?(countOnStart:y);
!!VR(count:y)&(count)>(countOnStart):S(countOnStart);
!!VR(flags):-(MON_FLAG_DIED); 
!!BM(stackID):P?(pos:y) F(flags) N(count) L0; 
; BattleStack_RefreshProtectAura
!!SN:E4450192/2/(stack);
; BattleMgr_Gex_Put_Stack
!!UN:C(COMBAT_MANAGER)/4/?(combatMgr:y);
!!SN:E4621216/2/(combatMgr)/(stack)/(pos);
; BattleHex_ClearDeadStack
!!VR(battleHex:y):S112*(pos) +452 +(combatMgr);
!!SN:E5928496/1/(battleHex)/(side)/(index);
!!VR(isWide:y):S(flags) &(MON_FLAG_WIDE);

!!if&(isWide)<>(FALSE);
  ; BattleStack_GetSecondOccupedGexID
  !!SN:E4481984/2/(stack);
  ; BattleHex_ClearDeadStack
  !!VR(pos2:y):Sv1;
  !!VR(battleHex2:y):S112*(pos2) +452 +(combatMgr);
  !!SN:E5928496/1/(battleHex2)/(side)/(index);
!!en;

!!FU(res_BattleStack_PlayAnimation):P(stack)/5/1;
; set stack orientation
!!UN:C(stack)/68/4/?(orientation:y);
!!SN&(orientation)=(side):E4482112/2/(stack)/1;
; and restore the original position (stand)
!!SN:E4482656/2/(stack)/2/1/0;

!?FU(res_BattleStack_PlayAnimation);
!#VA(stack:x) (animGroupID:x) (isPlayAnimReverse:x);

!!UN:C(COMBAT_MANAGER)/4/?(combatMgr:y);
; get stack DEF file
!!UN:C(stack)/356/4/?(def:y);
!!FU&(def)=(NULL):E;

; check stacks DEF groups count: fix crash
!!UN:C(def)/40/4/?(groupsCount:y);
!!FU&(groupsCount)<(animGroupID):E;

; get desired group 
!!UN:C(def)/28/4/?(ptrGroups:y);
!!VR(ptrDesiredGroup:y):S(animGroupID) *4 +(ptrGroups);
!!UN:C(ptrDesiredGroup)/4/?(desiredGroup:y);
; warning message
!!IF&(desiredGroup)=(NULL):M^No find desired def group! Â©igrik^;
!!FU&(desiredGroup)=(NULL):E;

!!UN:C(desiredGroup)/0/4/?(framesCount:y);
!!FU&(framesCount)<1:E;

!!UN:C(stack)/60/4/(animGroupID);
!!VR(start:y):S0;
!!VR(end:y):S(framesCount) -1;
!!VR(step:y):S1;

!!if&(isPlayAnimReverse)<>(NULL);
  !!VR(start):S(framesCount) -1;
  !!VR(end):S0;
  !!VR(step):S-1; 
!!en;

; play animation
!!re i/(start)/(end)/(step);
  ; set stack anim params  
  !!UN:C(stack)/64/4/i;
  ; BattleMgr_Draw
  !!SN:E4800448/2/(combatMgr)/1/0/0/100/1/1;
!!en;

; ========================== TESTING ==========================

!?FU(OnKeyPressed)&i^key^=(KEY_0);
!!VR(resurrectedHP:y):S10000;
!!VR(stackID:y):S0;
!!FU(res_ResurrectedDeadStack):P(stackID)/(resurrectedHP);
