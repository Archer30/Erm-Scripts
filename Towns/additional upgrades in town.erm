ZVSE2
; Author:   Archer30
; Engine:   ERM 2.0+
; Requires: ERA 3.3+, Era Erm Framework

; A script for you to set up additoinal upgrades in town
; An upgrade is possible to perform when both the town type of the targeted monster match the current town and the corresponding level of upgraded dwelling is built


!?FU(OnAfterErmInstructions);
!!FU(NewIntArray):P?i^addupg_alternativesInTownList^/(M_STORED);
; ========================== TESTING ==========================
; Set up non-upgraded monsters that you want to upgrade in town in the array
; Note that with each FU(Array_Push):P call, you can only add 15 creatures at max
!!FU(Array_Push):Pi^addupg_alternativesInTownList^/(MON_PEASANT)/(MON_MAGMA_ELEMENTAL);

// The following part is not needed if you set them in other places
; Define upgrade chain in hill forts, both non-upgraded and upgraded monsters should be set
!!MA:U(MON_PEASANT)/(MON_ROGUE);        [Peasant upgrade to Rogues in Hill Fort]
!!MA:U(MON_MAGMA_ELEMENTAL)/(MON_EARTH_MESSENGER); [Magma Elemental upgrade to Earth Messagers in Hill Fort]

; Define creature town type, only non-upgraded is needed, but defining both non-upg and upg is strongly recommended as makes more sense
!!MA:O(MON_PEASANT)/(TOWN_CASTLE);      [Peasant belongs to Castle, so that they can be upgraded (to Rogues) in a Castle with upg. Guard House built]
; Here we don't need to set the faction of Magma Elemental, as they belong to Conflux by default, right?
!!MA:O(MON_MAGMA_ELEMENTAL)/(TOWN_CONFLUX); [You can still set it if you want to make sure]
; ======================== END TESTING ========================

!?FU(OnDetermineMonInfoDlgUpgrade);
!#VA(monType:x) (upgType:x) (townId:x) (hero:x);

; Exit if universal upgrade is enabled
!!UN:P174/?(uniUpg:y);
!!FU&(uniUpg):E;

; Exit if the monster has an existing upgrade or not in a town
!!FU|(upgType)>(NO_MON)/(townId)=(NO_TOWN):E;

; Exit if the monster cannot be upgraded in town
!!FU(addupg_CheckIfMonCanBeUpgradedInTown):P(monType)/?(result:y);
!!FU&(result)<>(TRUE):E;

; Get the info of the monster and town
; Exit if the town type doesn't match
!!MA:O(monType)/?(ownerType:y);
!!CA0/(townId):T?(townType:y);
!!FU&(ownerType)<>(townType):E;

; Exit if the corresponding level of dwelling isn't built
!!MA:L(monType)/?(level:y);
!!VR(buildingId:y):S(level) +37;
!!CA0/(townId):B3/(buildingId);
!!FU&-1:E;

; Set up new upgrade
!!FU(GetUpgradedMonster):P(monType)/?(upgType);

!?FU(addupg_CheckIfMonCanBeUpgradedInTown);
!#VA(mon:x) (result:x);

!!VR(result):S(FALSE);

!!SN:Mi^addupg_alternativesInTownList^/?(size:y);

!!re i/0/(size)/1/-1;
  !!SN:Mi^addupg_alternativesInTownList^/i/?(listedMon:y);

  !!br&(listedMon)=(mon);
!!en;

!!VR(result)&i<(size):S(TRUE);
