ZVSE2
; Author:   Archer30
; Engine:   ERM 2.0+
; Requires: ERA 3.3+, Era Erm Framework

; Funciton for getting the chance of trigering a certain event with incremental odds. 
; Everytime the evetn fails to trigger, it has greater odds to trigger the next time.
; This is largely used in mordern games. In League of Legends, every time you missed a critical hit, you are more likely to get a crit in the next attack.


!?FU(rand_GetDynamicRandomChance);
!#VA(itemName:x);                       [String. This would be used to create globle variables]
!#VA(basicChance:x);                    [Default chance of triggering the event]
!#VA(additionalChance:x);               [Increased chance for the next check each time the result is not favoured]
!#VA(result:x);                         [Out. Boolean, (TRUE) if the result is favoured]
!#VA(random:x);                         [Out. Optional. random number generated by VR:R this time]

; Initialise variables
!!VR(result):S(FALSE);
!!VR(basicChance):F1/100;
!!VR(additionalChance):F1/100;
!!VRi^rand_%z(itemName)_dynOdds^:F(basicChance)/100;
!!VR(min:y):S100 -i^rand_%z(itemName)_dynOdds^;

; Generate a random number and check if it reaches the ideal range
!!VR(random):R0/1/100;                  [random numb from 1 to 100]
!!VR(result)&(random)>=(min):S(TRUE);

; Restore the dynamic odds or increase depending on the result
!!if&(result);
  !!VRi^rand_%z(itemName)_dynOdds^:S(basicChance);
!!el;
  !!VRi^rand_%z(itemName)_dynOdds^:+(additionalChance);
!!en;

; ========================== TESTING ==========================

!?FU(OnKeyPressed)&i^key^=(KEY_0);
!#VA(key:x) (preventDefault:x);

!!VR(preventDefault):S(TRUE);

; Check if the odds is desirable
!!FU(rand_GetDynamicRandomChance):P^test^/20/1/?(result:y)/?(random:y);

; Show info on the screen. Play with sound if the result is desirable. 
!!VR(dynamicOdds:y):Si^rand_test_dynOdds^;
!!VRz1:S^Random number: %(random). Dynamic odds for the next: %(dynamicOdds)%.^;

!!if&(result);
  !!VRz1:+^ {Bingo!}^;
  !!SN:P^CHAT^;
!!en;

!!FU(rand_QuietMessage):P;

** Function for playing IF:L msg silently by Berserker **
!?FU(rand_QuietMessage);
; Arguments: Message: z1;
!!VRy1:Sv2;

!!FU(rand_SoundControl):P0/2;
!!IF:Lz1;
!!FU(rand_SoundControl):P1/2;

!!VRv2:Sy1;

!?FU(rand_SoundControl);
; Arguments: SoundIsOn: boolean; OldValue: v-index
!!if&x1=1;
  !!VRy4:Svx2;
  !!VRy1:Sy4%256;
  !!VRy4::256;
  !!VRy2:Sy4%256;
  !!VRy4::256;
  !!VRy3:Sy4%256;
  !!UN:C6916016/1/y1 C6916020/1/y2 C6916028/1/y3;
!!el;
  !!UN:C6916016/1/?y1 C6916020/1/?y2 C6916028/1/?y3 C6916016/1/0 C6916020/1/0 C6916028/1/0;
  !!VRy3:*65536;
  !!VRy2:*256;
  !!VRvx2:Sy1+y2+y3;
!!en;
